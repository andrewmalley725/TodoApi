// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TododApi.Models;

namespace TododApi.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20230211052955_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TododApi.Models.Todo", b =>
                {
                    b.Property<int>("todoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("done")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("todoId");

                    b.HasIndex("userId");

                    b.ToTable("TodoList");

                    b.HasData(
                        new
                        {
                            todoId = 1,
                            description = "Sleep under my rock",
                            done = false,
                            userId = 1
                        });
                });

            modelBuilder.Entity("TododApi.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("userId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            username = "patrickStar2023"
                        });
                });

            modelBuilder.Entity("TododApi.Models.Todo", b =>
                {
                    b.HasOne("TododApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
